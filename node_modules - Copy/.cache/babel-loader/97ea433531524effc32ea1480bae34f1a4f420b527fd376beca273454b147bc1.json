{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.SHAKE = exports.SHA3Hash = exports.SHA3 = exports.Keccak = void 0;\nvar _buffer = require(\"buffer\");\nvar _sponge = _interopRequireDefault(require(\"./sponge\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\nvar createHash = function createHash(_ref) {\n  var allowedSizes = _ref.allowedSizes,\n    defaultSize = _ref.defaultSize,\n    padding = _ref.padding;\n  return function Hash() {\n    var _this = this;\n    var size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultSize;\n    if (!this || this.constructor !== Hash) {\n      return new Hash(size);\n    }\n    if (allowedSizes && !allowedSizes.includes(size)) {\n      throw new Error(\"Unsupported hash length\");\n    }\n    var sponge = new _sponge[\"default\"]({\n      capacity: size\n    });\n    this.update = function (input) {\n      var encoding = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"utf8\";\n      if (_buffer.Buffer.isBuffer(input)) {\n        sponge.absorb(input);\n        return _this;\n      }\n      if (typeof input === \"string\") {\n        return _this.update(_buffer.Buffer.from(input, encoding));\n      }\n      throw new TypeError(\"Not a string or buffer\");\n    };\n    this.digest = function () {\n      var formatOrOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"binary\";\n      var options = typeof formatOrOptions === \"string\" ? {\n        format: formatOrOptions\n      } : formatOrOptions;\n      var buffer = sponge.squeeze({\n        buffer: options.buffer,\n        padding: options.padding || padding\n      });\n      if (options.format && options.format !== \"binary\") {\n        return buffer.toString(options.format);\n      }\n      return buffer;\n    };\n    this.reset = function () {\n      sponge.reset();\n      return _this;\n    };\n    return this;\n  };\n};\nvar Keccak = createHash({\n  allowedSizes: [224, 256, 384, 512],\n  defaultSize: 512,\n  padding: 1\n});\nexports.Keccak = Keccak;\nvar SHA3 = createHash({\n  allowedSizes: [224, 256, 384, 512],\n  defaultSize: 512,\n  padding: 6\n});\nexports.SHA3 = SHA3;\nvar SHAKE = createHash({\n  allowedSizes: [128, 256],\n  defaultSize: 256,\n  padding: 31\n});\nexports.SHAKE = SHAKE;\nvar SHA3Hash = Keccak;\nexports.SHA3Hash = SHA3Hash;\nSHA3.SHA3Hash = SHA3Hash;\nvar _default = SHA3;\nexports[\"default\"] = _default;","map":{"version":3,"names":["Object","defineProperty","exports","value","SHAKE","SHA3Hash","SHA3","Keccak","_buffer","require","_sponge","_interopRequireDefault","obj","__esModule","createHash","_ref","allowedSizes","defaultSize","padding","Hash","_this","size","arguments","length","undefined","constructor","includes","Error","sponge","capacity","update","input","encoding","Buffer","isBuffer","absorb","from","TypeError","digest","formatOrOptions","options","format","buffer","squeeze","toString","reset","_default"],"sources":["C:/Users/gugan/flow-hackverse/node_modules/sha3/index.js"],"sourcesContent":["\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=exports.SHAKE=exports.SHA3Hash=exports.SHA3=exports.Keccak=void 0;var _buffer=require(\"buffer\");var _sponge=_interopRequireDefault(require(\"./sponge\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}var createHash=function createHash(_ref){var allowedSizes=_ref.allowedSizes,defaultSize=_ref.defaultSize,padding=_ref.padding;return function Hash(){var _this=this;var size=arguments.length>0&&arguments[0]!==undefined?arguments[0]:defaultSize;if(!this||this.constructor!==Hash){return new Hash(size)}if(allowedSizes&&!allowedSizes.includes(size)){throw new Error(\"Unsupported hash length\")}var sponge=new _sponge[\"default\"]({capacity:size});this.update=function(input){var encoding=arguments.length>1&&arguments[1]!==undefined?arguments[1]:\"utf8\";if(_buffer.Buffer.isBuffer(input)){sponge.absorb(input);return _this}if(typeof input===\"string\"){return _this.update(_buffer.Buffer.from(input,encoding))}throw new TypeError(\"Not a string or buffer\")};this.digest=function(){var formatOrOptions=arguments.length>0&&arguments[0]!==undefined?arguments[0]:\"binary\";var options=typeof formatOrOptions===\"string\"?{format:formatOrOptions}:formatOrOptions;var buffer=sponge.squeeze({buffer:options.buffer,padding:options.padding||padding});if(options.format&&options.format!==\"binary\"){return buffer.toString(options.format)}return buffer};this.reset=function(){sponge.reset();return _this};return this}};var Keccak=createHash({allowedSizes:[224,256,384,512],defaultSize:512,padding:1});exports.Keccak=Keccak;var SHA3=createHash({allowedSizes:[224,256,384,512],defaultSize:512,padding:6});exports.SHA3=SHA3;var SHAKE=createHash({allowedSizes:[128,256],defaultSize:256,padding:31});exports.SHAKE=SHAKE;var SHA3Hash=Keccak;exports.SHA3Hash=SHA3Hash;SHA3.SHA3Hash=SHA3Hash;var _default=SHA3;exports[\"default\"]=_default;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}