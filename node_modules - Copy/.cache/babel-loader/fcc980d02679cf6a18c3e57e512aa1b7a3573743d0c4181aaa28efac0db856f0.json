{"ast":null,"code":"import _toConsumableArray from '@babel/runtime/helpers/toConsumableArray';\nimport _asyncToGenerator from '@babel/runtime/helpers/asyncToGenerator';\nimport _regeneratorRuntime from '@babel/runtime/regenerator';\nimport { config } from '@onflow/config';\nvar LEVELS = Object.freeze({\n  debug: 5,\n  info: 4,\n  log: 3,\n  warn: 2,\n  error: 1\n});\nvar buildLoggerMessageArgs = function buildLoggerMessageArgs(_ref) {\n  var title = _ref.title,\n    message = _ref.message;\n  return [\"\\n    %c\".concat(title, \"\\n    ============================\\n\\n    \").concat(message, \"\\n\\n    ============================\\n    \").replace(/\\n[^\\S\\r\\n]+/g, \"\\n\").trim(),, \"font-weight:bold;font-family:monospace;\"];\n};\nvar log = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n    var _console, _console2, _console3, _console4, _console5;\n    var title, message, level, _ref2$always, always, configLoggerLevel, loggerMessageArgs;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            title = _ref2.title, message = _ref2.message, level = _ref2.level, _ref2$always = _ref2.always, always = _ref2$always === void 0 ? false : _ref2$always;\n            _context.next = 3;\n            return config.get(\"logger.level\", LEVELS.warn);\n          case 3:\n            configLoggerLevel = _context.sent;\n            if (!(!always && configLoggerLevel < level)) {\n              _context.next = 6;\n              break;\n            }\n            return _context.abrupt(\"return\");\n          case 6:\n            loggerMessageArgs = buildLoggerMessageArgs({\n              title: title,\n              message: message\n            });\n            _context.t0 = level;\n            _context.next = _context.t0 === LEVELS.debug ? 10 : _context.t0 === LEVELS.info ? 12 : _context.t0 === LEVELS.warn ? 14 : _context.t0 === LEVELS.error ? 16 : 18;\n            break;\n          case 10:\n            (_console = console).debug.apply(_console, _toConsumableArray(loggerMessageArgs));\n            return _context.abrupt(\"break\", 19);\n          case 12:\n            (_console2 = console).info.apply(_console2, _toConsumableArray(loggerMessageArgs));\n            return _context.abrupt(\"break\", 19);\n          case 14:\n            (_console3 = console).warn.apply(_console3, _toConsumableArray(loggerMessageArgs));\n            return _context.abrupt(\"break\", 19);\n          case 16:\n            (_console4 = console).error.apply(_console4, _toConsumableArray(loggerMessageArgs));\n            return _context.abrupt(\"break\", 19);\n          case 18:\n            (_console5 = console).log.apply(_console5, _toConsumableArray(loggerMessageArgs));\n          case 19:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return function log(_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nlog.deprecate = function (_ref4) {\n  var pkg = _ref4.pkg,\n    subject = _ref4.subject,\n    transition = _ref4.transition,\n    _ref4$level = _ref4.level,\n    level = _ref4$level === void 0 ? LEVELS.warn : _ref4$level,\n    _ref4$message = _ref4.message,\n    message = _ref4$message === void 0 ? \"\" : _ref4$message,\n    _ref4$callback = _ref4.callback,\n    callback = _ref4$callback === void 0 ? null : _ref4$callback;\n  var capitalizeFirstLetter = function capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  };\n  var logMessage = function logMessage() {\n    return log({\n      title: \"\".concat(pkg ? pkg + \" \" : \"\", \"Deprecation Notice\"),\n      message: \"\\n      \".concat(subject ? \"\".concat(capitalizeFirstLetter(subject), \" is deprecated and will cease to work in future releases\").concat(pkg ? \" of \" + pkg : \"\", \".\") : \"\").concat(message ? \"\\n\" + message : \"\").concat(transition ? \"\\nYou can learn more (including a guide on common transition paths) here: \".concat(transition) : \"\", \"\\n    \").trim(),\n      level: level\n    });\n  };\n  if (typeof callback === \"function\") {\n    return /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var _args2 = arguments;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return logMessage();\n            case 2:\n              _context2.next = 4;\n              return callback.apply(void 0, _args2);\n            case 4:\n              return _context2.abrupt(\"return\", _context2.sent);\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n  }\n  return logMessage();\n};\nexport { LEVELS, log };","map":{"version":3,"names":["LEVELS","Object","freeze","debug","info","log","warn","error","buildLoggerMessageArgs","_ref","title","message","concat","replace","trim","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref2","_console","_console2","_console3","_console4","_console5","level","_ref2$always","always","configLoggerLevel","loggerMessageArgs","wrap","_callee$","_context","prev","next","config","get","sent","abrupt","t0","console","apply","_toConsumableArray","stop","_x","arguments","deprecate","_ref4","pkg","subject","transition","_ref4$level","_ref4$message","_ref4$callback","callback","capitalizeFirstLetter","string","charAt","toUpperCase","slice","logMessage","_callee2","_args2","_callee2$","_context2"],"sources":["C:\\Users\\gugan\\flow-hackverse\\node_modules\\@onflow\\util-logger\\src\\util-logger.js"],"sourcesContent":["import {config} from \"@onflow/config\"\n\nexport const LEVELS = Object.freeze({\n  debug: 5,\n  info: 4,\n  log: 3,\n  warn: 2,\n  error: 1,\n})\n\nconst buildLoggerMessageArgs = ({title, message}) => {\n  return [\n    `\n    %c${title}\n    ============================\n\n    ${message}\n\n    ============================\n    `\n      .replace(/\\n[^\\S\\r\\n]+/g, \"\\n\")\n      .trim(),\n    ,\n    \"font-weight:bold;font-family:monospace;\",\n  ]\n}\n\nexport const log = async ({title, message, level, always = false}) => {\n  const configLoggerLevel = await config.get(\"logger.level\", LEVELS.warn)\n\n  // If config level is below message level then don't show it\n  if (!always && configLoggerLevel < level) return\n\n  const loggerMessageArgs = buildLoggerMessageArgs({title, message})\n\n  switch (level) {\n    case LEVELS.debug:\n      console.debug(...loggerMessageArgs)\n      break\n    case LEVELS.info:\n      console.info(...loggerMessageArgs)\n      break\n    case LEVELS.warn:\n      console.warn(...loggerMessageArgs)\n      break\n    case LEVELS.error:\n      console.error(...loggerMessageArgs)\n      break\n    default:\n      console.log(...loggerMessageArgs)\n  }\n}\n\nlog.deprecate = ({\n  pkg,\n  subject,\n  transition,\n  level = LEVELS.warn,\n  message = \"\",\n  callback = null,\n}) => {\n  const capitalizeFirstLetter = string => {\n    return string.charAt(0).toUpperCase() + string.slice(1)\n  }\n\n  const logMessage = () =>\n    log({\n      title: `${pkg ? pkg + \" \" : \"\"}Deprecation Notice`,\n      message: `\n      ${\n        subject\n          ? `${capitalizeFirstLetter(\n              subject\n            )} is deprecated and will cease to work in future releases${\n              pkg ? \" of \" + pkg : \"\"\n            }.`\n          : \"\"\n      }${message ? \"\\n\" + message : \"\"}${\n        transition\n          ? `\\nYou can learn more (including a guide on common transition paths) here: ${transition}`\n          : \"\"\n      }\n    `.trim(),\n      level,\n    })\n\n  if (typeof callback === \"function\") {\n    return async (...args) => {\n      await logMessage()\n      return await callback(...args)\n    }\n  }\n  return logMessage()\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}