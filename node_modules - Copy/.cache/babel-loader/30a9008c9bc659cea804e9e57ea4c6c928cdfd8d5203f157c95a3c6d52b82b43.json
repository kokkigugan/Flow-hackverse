{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _buffer = require(\"buffer\");\nvar _permute = _interopRequireDefault(require(\"./permute\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\nvar xorWords = function xorWords(I, O) {\n  for (var i = 0; i < I.length; i += 8) {\n    var o = i / 4;\n    O[o] ^= I[i + 7] << 24 | I[i + 6] << 16 | I[i + 5] << 8 | I[i + 4];\n    O[o + 1] ^= I[i + 3] << 24 | I[i + 2] << 16 | I[i + 1] << 8 | I[i];\n  }\n  return O;\n};\nvar readWords = function readWords(I, O) {\n  for (var o = 0; o < O.length; o += 8) {\n    var i = o / 4;\n    O[o] = I[i + 1];\n    O[o + 1] = I[i + 1] >>> 8;\n    O[o + 2] = I[i + 1] >>> 16;\n    O[o + 3] = I[i + 1] >>> 24;\n    O[o + 4] = I[i];\n    O[o + 5] = I[i] >>> 8;\n    O[o + 6] = I[i] >>> 16;\n    O[o + 7] = I[i] >>> 24;\n  }\n  return O;\n};\nvar Sponge = function Sponge(_ref) {\n  var _this = this;\n  var capacity = _ref.capacity,\n    padding = _ref.padding;\n  var keccak = (0, _permute[\"default\"])();\n  var stateSize = 200;\n  var blockSize = capacity / 8;\n  var queueSize = stateSize - capacity / 4;\n  var queueOffset = 0;\n  var state = new Uint32Array(stateSize / 4);\n  var queue = _buffer.Buffer.allocUnsafe(queueSize);\n  this.absorb = function (buffer) {\n    for (var i = 0; i < buffer.length; i++) {\n      queue[queueOffset] = buffer[i];\n      queueOffset += 1;\n      if (queueOffset >= queueSize) {\n        xorWords(queue, state);\n        keccak(state);\n        queueOffset = 0;\n      }\n    }\n    return _this;\n  };\n  this.squeeze = function () {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var output = {\n      buffer: options.buffer || _buffer.Buffer.allocUnsafe(blockSize),\n      padding: options.padding || padding,\n      queue: _buffer.Buffer.allocUnsafe(queue.length),\n      state: new Uint32Array(state.length)\n    };\n    queue.copy(output.queue);\n    for (var i = 0; i < state.length; i++) {\n      output.state[i] = state[i];\n    }\n    output.queue.fill(0, queueOffset);\n    output.queue[queueOffset] |= output.padding;\n    output.queue[queueSize - 1] |= 128;\n    xorWords(output.queue, output.state);\n    for (var offset = 0; offset < output.buffer.length; offset += queueSize) {\n      keccak(output.state);\n      readWords(output.state, output.buffer.slice(offset, offset + queueSize));\n    }\n    return output.buffer;\n  };\n  this.reset = function () {\n    queue.fill(0);\n    state.fill(0);\n    queueOffset = 0;\n    return _this;\n  };\n  return this;\n};\nvar _default = Sponge;\nexports[\"default\"] = _default;","map":{"version":3,"names":["Object","defineProperty","exports","value","_buffer","require","_permute","_interopRequireDefault","obj","__esModule","xorWords","I","O","i","length","o","readWords","Sponge","_ref","_this","capacity","padding","keccak","stateSize","blockSize","queueSize","queueOffset","state","Uint32Array","queue","Buffer","allocUnsafe","absorb","buffer","squeeze","options","arguments","undefined","output","copy","fill","offset","slice","reset","_default"],"sources":["C:/Users/gugan/flow-hackverse/node_modules/sha3/sponge/index.js"],"sourcesContent":["\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=void 0;var _buffer=require(\"buffer\");var _permute=_interopRequireDefault(require(\"./permute\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}var xorWords=function xorWords(I,O){for(var i=0;i<I.length;i+=8){var o=i/4;O[o]^=I[i+7]<<24|I[i+6]<<16|I[i+5]<<8|I[i+4];O[o+1]^=I[i+3]<<24|I[i+2]<<16|I[i+1]<<8|I[i]}return O};var readWords=function readWords(I,O){for(var o=0;o<O.length;o+=8){var i=o/4;O[o]=I[i+1];O[o+1]=I[i+1]>>>8;O[o+2]=I[i+1]>>>16;O[o+3]=I[i+1]>>>24;O[o+4]=I[i];O[o+5]=I[i]>>>8;O[o+6]=I[i]>>>16;O[o+7]=I[i]>>>24}return O};var Sponge=function Sponge(_ref){var _this=this;var capacity=_ref.capacity,padding=_ref.padding;var keccak=(0,_permute[\"default\"])();var stateSize=200;var blockSize=capacity/8;var queueSize=stateSize-capacity/4;var queueOffset=0;var state=new Uint32Array(stateSize/4);var queue=_buffer.Buffer.allocUnsafe(queueSize);this.absorb=function(buffer){for(var i=0;i<buffer.length;i++){queue[queueOffset]=buffer[i];queueOffset+=1;if(queueOffset>=queueSize){xorWords(queue,state);keccak(state);queueOffset=0}}return _this};this.squeeze=function(){var options=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var output={buffer:options.buffer||_buffer.Buffer.allocUnsafe(blockSize),padding:options.padding||padding,queue:_buffer.Buffer.allocUnsafe(queue.length),state:new Uint32Array(state.length)};queue.copy(output.queue);for(var i=0;i<state.length;i++){output.state[i]=state[i]}output.queue.fill(0,queueOffset);output.queue[queueOffset]|=output.padding;output.queue[queueSize-1]|=128;xorWords(output.queue,output.state);for(var offset=0;offset<output.buffer.length;offset+=queueSize){keccak(output.state);readWords(output.state,output.buffer.slice(offset,offset+queueSize))}return output.buffer};this.reset=function(){queue.fill(0);state.fill(0);queueOffset=0;return _this};return this};var _default=Sponge;exports[\"default\"]=_default;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}